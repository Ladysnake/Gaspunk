buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

/* * * * LadyLib-specific integration * * * */
ext.ladylibJava = "./Ladylib/java"
ext.ladylibResources = "./Ladylib/resources"

sourceSets {
    main {
        java {
            srcDir project.ladylibJava
        }
        resources {
            srcDir project.ladylibResources
        }
    }
}

reobfJar {
    // prevents classloading issues when multiple mods shade ladylib
    addExtraSrgLine "PK: ladylib ladysnake/${modBaseName}/ladylib"
}

task initSubmodules(type: Exec) {
    if (new File('LadyLib').exists()) {
        commandLine 'git', 'submodule', 'init'
    }
    else {
        commandLine 'git', 'submodule', 'add', 'https://github.com/Pyrofab/LadyLib.git', 'LadyLib'
    }
}

task updateSubmodules(type: Exec) {
    commandLine 'git', 'submodule', 'update'
}

updateSubmodules.dependsOn(initSubmodules)
setupDecompWorkspace.dependsOn(updateSubmodules)
/* * * * * * * * * * * * * * * * * * * * * * */

sourceSets {
    pathos {
        compileClasspath = main.compileClasspath
        runtimeClasspath = main.runtimeClasspath
    }
    main {
        compileClasspath += pathos.output
        runtimeClasspath += pathos.output
    }
    test {
        compileClasspath += pathos.output
        runtimeClasspath += pathos.output
    }
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replace '@VERSION@', modVersion

    if (project.hasProperty('mc_username')) {
        clientRunArgs += ['--username', "${project.mc_username}"]
        if (project.hasProperty('mc_password')) {
            clientRunArgs += ['--password=', "${project.mc_password}"]
        }
    }
    if (project.hasProperty('mc_uuid')) {
        clientRunArgs += ['--uuid', "${project.mc_uuid}"]
    }
    serverRunArgs += "nogui"

    if (project.hasProperty('client_args')) {
        clientJvmArgs += "${project.client_args}"
    }
    if (project.hasProperty('server_args')) {
        serverJvmArgs += "${project.server_args}"
    }

    clientJvmArgs += "-Dlog4j.skipJansi=true"
    serverJvmArgs += "-Dlog4j.skipJansi=true"

}

repositories {
    mavenCentral()
    jcenter()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    archiveName = "${archivesBaseName}-${mc_version}-${modVersion}.jar"
    from sourceSets.api.output
    from sourceSets.main.output
    from sourceSets.pathos.output
}
